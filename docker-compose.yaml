version : '3.6'

services:

  api1:
    image: gasparbarancelli/rinhabackend-java:postgres-final
    hostname: api1
    depends_on:
      - db
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2:
    image: gasparbarancelli/rinhabackend-java:postgres-final
    hostname: api2
    depends_on:
      - db
    expose:
      - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db:
    image: postgres
    command: postgres -c 'max_connections=200' -c 'shared_buffers=512MB' -c 'fsync=off' -c 'effective_cache_size=512MB' -c 'synchronous_commit=off' -c 'checkpoint_timeout=1d' -c 'max_wal_size=1GB' -c 'full_page_writes=false'
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: RINHA_BACKEND
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s